<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.board.mappers.board">

<!-- 게시물 목록 보기 -->
<select id="list" parameterType="HashMap" resultType="com.board.dto.BoardVO">
	select rnum seq,seqno,title,writer,regdate,hitno from  
	(select seqno,title,writer,hitno,to_char(regdate,'YYYY-MM-DD HH24:MI:SS') as regdate, 
	<choose>
		<when test='searchType.equals("title")'> 
			row_number() over(order by seqno desc) as rnum from tbl_board  
			where title like '%'||#{keyword}||'%') board 
		</when>
		
		<when test='searchType.equals("content")'>	 
			row_number() over(order by seqno desc) as rnum from tbl_board  
			where content like '%'||#{keyword}||'%') board 
		</when>	 

		<when test='searchType.equals("title_content")'>
			row_number() over(order by seqno desc) as rnum from tbl_board  
			where content like '%'||#{keyword}||'%' or title like '%'||#{keyword}||'%') board  		
		</when> 
		 	
		<when test='searchType.equals("writer")'>
			row_number() over(order by seqno desc) as rnum from tbl_board  
			where writer like '%'||#{keyword}||'%') board 
		</when>
		<otherwise>	
			row_number() over(order by seqno desc) as rnum from tbl_board) board 
		
		</otherwise>	
	</choose> 
		where rnum between #{startPoint} and #{endPoint} order by seqno desc
	
</select>

<!-- 게시물 전체 목록 보기 -->
<select id="listAll" resultType="com.board.dto.BoardVO">
	select * from tbl_board order by seqno desc
</select>

<!-- 전체 게시물 갯수 계산 -->
<select id="totalCount" parameterType="HashMap" resultType="int">
	select count(*) from tbl_board 
		<choose>
			<when test='searchType.equals("title")'>
				where title like '%'||#{keyword}||'%' 
			</when>
			
			<when test='searchType.equals("content")'>
				where content like '%'||#{keyword}||'%' 
			</when>	

			<when test='searchType.equals("title_content")'>
				where content like '%'||#{keyword}||'%' or title like '%'||#{keyword}||'%' 
			</when>	
			
			<when test='searchType.equals("writer")'>
				where writer like '%'||#{keyword}||'%'
			</when>
		</choose>			
</select> 

<!-- 게시물 내용 보기 -->
<select id="view" parameterType="int" resultType="com.board.dto.BoardVO">
	select seqno,userid,title,writer,to_char(regdate,'YYYY-MM-DD HH24:MI:SS') as regdate,
		content,likecnt,dislikecnt from tbl_board where seqno = #{seqno}
</select>

<!-- 게시물 등록 -->
<insert id="write" parameterType="com.board.dto.BoardVO">
	insert into tbl_board (seqno,writer,title,content,regdate,userid) 
		values (#{seqno},#{writer},#{title},#{content},sysdate,#{userid})
</insert>

<!-- 게시물 번호 구하기 - 시퀀스의 nexval 사용 -->
<select id="getSeqnoWithNextval" resultType="int">
	select tbl_board_seq.nextval as seqno from dual
</select>

<!-- 게시물 이전 보기 -->
<select id="pre_seqno" parameterType="HashMap" resultType="int">

	<![CDATA[		
		select nvl(max(seqno),'0') as seqno from tbl_board where seqno < #{seqno}
	]]>	
		<choose>
			<when test='searchType.equals("title")'>
				and title like '%'||#{keyword}||'%' 
			</when>
			
			<when test='searchType.equals("content")'>
				and content like '%'||#{keyword}||'%' 
			</when>	

			<when test='searchType.equals("title_content")'>
				and content like '%'||#{keyword}||'%' or title like '%'||#{keyword}||'%' 
			</when>	
			
			<when test='searchType.equals("writer")'>
				and writer like '%'||#{keyword}||'%'
			</when>
		</choose>				
</select>

<!-- 게시물 다음 보기 -->
<select id="next_seqno" parameterType="HashMap" resultType="int">

	<![CDATA[		
		select nvl(min(seqno),'0') as seqno from tbl_board where seqno > #{seqno}
	]]>	
	
		<choose>
			<when test='searchType.equals("title")'>
				and title like '%'||#{keyword}||'%' 
			</when>
			
			<when test='searchType.equals("content")'>
				and content like '%'||#{keyword}||'%' 
			</when>	

			<when test='searchType.equals("title_content")'>
				and content like '%'||#{keyword}||'%' or title like '%'||#{keyword}||'%' 
			</when>	
			
			<when test='searchType.equals("writer")'>
				and writer like '%'||#{keyword}||'%'
			</when>
		</choose>	

</select>

<!-- 파일 업로드 정보 등록 -->
<insert id="fileInfoRegistry" parameterType="HashMap">
	insert into tbl_file (fileseqno,seqno,userid,org_filename,stored_filename,filesize,checkfile) 
		values (tbl_file_seq.nextval,#{seqno},#{userid},#{org_filename},#{stored_filename},#{filesize},'Y')
</insert>

<!-- 다운로드를 위한 파일 정보 가져오기 -->
<select id="fileInfo" parameterType="int" resultType="com.board.dto.FileVO">
	select org_filename, stored_filename from tbl_file where fileseqno = #{fileseqno}
</select>

<!-- 게시물 내용 보기에서 업로드된 파일 목록 보기 -->
<select id="fileListView" parameterType="int" resultType="com.board.dto.FileVO">
	select fileseqno, org_filename, filesize from tbl_file where seqno = #{seqno}
</select>

<!-- 게시물 수정 -->
<update id="modify" parameterType="com.board.dto.BoardVO">
	update tbl_board set title=#{title},content=#{content} where seqno=#{seqno}
</update>

<!-- 게시물 삭제 -->
<delete id="delete" parameterType="int">
	delete from tbl_board where seqno = #{seqno}
</delete>

<!-- 게시물 수정에서 파일 삭제 -->
<delete id="deleteFileList" parameterType="int">
	delete from tbl_file where fileseqno = #{fileseqno}
</delete>

<!-- 게시물 삭제를 위한 파일 목록 가져 오기 -->
<select id="deleteFileOnBoard" parameterType="int" resultType="com.board.dto.FileVO">
	select stored_filename from tbl_file where seqno = #{seqno}
</select>

<!-- 회원 탈퇴 시 회원이 업로드한 파일 정보 가져오기 -->
<select id="fileInfoByUserid" parameterType="string" resultType="com.board.dto.FileVO">
	select stored_filename from tbl_file where userid = #{userid}
</select>

<!-- 좋아요/싫어요 확인 내용 가져 오기-->
<select id="likeCheckView" parameterType="HashMap" resultType="com.board.dto.LikeVO">
	select mylikecheck, mydislikecheck from tbl_like where seqno = #{seqno} and userid = #{userid}
</select>

<!-- 좋아요/싫어요 갯수 수정하기 -->
<select id="boardLikeUpdate" parameterType="HashMap">
	update tbl_board set likecnt = #{likecnt}, dislikecnt = #{dislikecnt} where seqno = #{seqno}
</select>

<!-- 좋아요/싫어요 확인 등록하기 -->
<insert id="likeCheckRegistry" parameterType="HashMap">
	insert into tbl_like (seqno,userid,mylikecheck,mydislikecheck,likedate,dislikedate) 
		values (#{seqno},#{userid},#{mylikecheck},#{mydislikecheck},#{likedate},#{dislikedate})
</insert>

<!-- 좋아요/싫어요 확인 수정하기 -->
<update id="likeCheckUpdate" parameterType="HashMap">
	update tbl_like set mylikecheck = #{mylikecheck}, mydislikecheck = #{mydislikecheck},
		likedate = #{likedate}, dislikedate = #{dislikedate}
</update>

<!-- 댓글 보기 -->
<select id="replyView" parameterType="com.board.dto.ReplyVO" resultType="com.board.dto.ReplyVO">
	select replyseqno, replywriter, replycontent, to_char(replyregdate,'YYYY-MM-DD HH24:MI:SS')  
		as replyregdate,userid from tbl_reply where seqno = #{seqno}    
		order by replyseqno desc
</select> 

<!-- 댓글 등록 -->
<insert id="replyRegistry" parameterType="com.board.dto.ReplyVO">
	insert into tbl_reply (replyseqno,seqno, userid, replywriter, 
		replycontent, replyregdate) values  
		(tbl_reply_seq.nextval,#{seqno},#{userid},#{replywriter},
		#{replycontent},sysdate)
</insert>

<!-- 댓글 수정 -->
<update id="replyUpdate" parameterType="com.board.dto.ReplyVO">
	update tbl_reply set replycontent = #{replycontent}  
	where replyseqno = #{replyseqno}
</update>

<!-- 댓글 삭제 -->
<delete id="replyDelete" parameterType="com.board.dto.ReplyVO">
	delete from tbl_reply where replyseqno = #{replyseqno}
</delete>

<!-- 조회수 증가 -->
<update id="hitnoUpgrade" parameterType="int">
	update tbl_board set hitno = (select nvl(hitno,'0') from tbl_board where seqno = #{seqno})+1 where seqno = #{seqno}
</update>

</mapper>

